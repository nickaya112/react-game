{"version":3,"sources":["assets/audio/city.mp3","assets/audio/tink.wav","assets/audio/snare.wav","assets/images/logo_rs.png","assets/images/smile.png","App.js","reportWebVitals.js","index.js"],"names":["App","countLocalStorage","localStorage","currentCount","JSON","parse","typeGameLocalStorage","typeGame","matrixLocalStorage","Array","fill","currentMatrix","starterSymbLocalStorage","secondSymb","starterSymb","combinationsWin","clickHandler","event","clickedSquare","target","getAttribute","console","log","matrix","document","getElementById","play","count","setMatrix","setCount","stringify","isWin","isDraw","rand","setTimeout","Math","floor","random","length","sybmolVictory","alertWin","alert","clearField","victory","forEach","symbol","index","i","currentLine","winsXcount","wins0count","useState","setTypeGame","className","src","city","preload","controls","autoplay","loop","id","soundGood","soundBad","checked","onlabel","onstyle","offlabel","offstyle","style","onChange","onClick","data","type","class","href","logoRs","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode"],"mappings":"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","file":"static/js/main.487acb2d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/city.8a5f5455.mp3\";","export default __webpack_public_path__ + \"static/media/tink.5b878d5d.wav\";","export default __webpack_public_path__ + \"static/media/snare.3aa3f943.wav\";","export default __webpack_public_path__ + \"static/media/logo_rs.1766f2cf.png\";","export default __webpack_public_path__ + \"static/media/smile.e8b36772.png\";","import React, { useState } from 'react';\r\nimport './App.css';\r\n\r\nimport BootstrapSwitchButton from 'bootstrap-switch-button-react';\r\n\r\n// import citySound from '../assets/audio/city.mp3';\r\nimport city from './assets/audio/city.mp3';\r\nimport soundGood from './assets/audio/tink.wav';\r\nimport soundBad from './assets/audio/snare.wav';\r\nimport smile from './assets/images/smile.png';\r\nimport logoRs from './assets/images/logo_rs.png';\r\n\r\nfunction App() {\r\n  // localStorage.clear();\r\n  let countLocalStorage = 0;\r\n  if (localStorage.currentCount) {\r\n    countLocalStorage = +JSON.parse( localStorage.currentCount );\r\n  } \r\n\r\n  let typeGameLocalStorage = false;\r\n  if (localStorage.typeGame) {\r\n    typeGameLocalStorage = JSON.parse( localStorage.typeGame );\r\n  } \r\n\r\n  let matrixLocalStorage = Array(9).fill(null);\r\n  if (localStorage.currentMatrix) {\r\n    matrixLocalStorage = JSON.parse( localStorage.currentMatrix );\r\n  } \r\n\r\n  let starterSymbLocalStorage = 'X';\r\n  let secondSymb = '0';\r\n  if (localStorage.starterSymb) {\r\n    starterSymbLocalStorage = JSON.parse( localStorage.starterSymb );\r\n    if (starterSymbLocalStorage === '0') {\r\n      secondSymb = 'X';\r\n    }\r\n  } \r\n  \r\n\r\n  const combinationsWin = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n\r\n  const clickHandler = (event) => {\r\n    let clickedSquare = event.target.getAttribute('data');\r\n    console.log(`clicked square ${clickedSquare}`);\r\n    const currentMatrix = matrix;\r\n\r\n    if (currentMatrix[clickedSquare] === null) {\r\n      const myAudio= document.getElementById('soundGood');\r\n      myAudio.play();\r\n\r\n      if (count % 2 === 0) {\r\n        currentMatrix[clickedSquare] = starterSymbLocalStorage; // 'x'\r\n        \r\n      } else {\r\n        currentMatrix[clickedSquare] = secondSymb;\r\n      }\r\n      setMatrix(currentMatrix);\r\n      setCount(count + 1);\r\n      localStorage.currentMatrix = JSON.stringify(currentMatrix);\r\n      localStorage.currentCount  = JSON.stringify(count + 1);\r\n\r\n      if (isWin() || isDraw()) {\r\n        console.log('не дойдет до проверки типа игры');\r\n        return;\r\n      }\r\n\r\n      if (typeGameLocalStorage) {\r\n        console.log('game with computer');\r\n        let rand;\r\n  \r\n        const computerTurn = () => {\r\n          while (true) {\r\n            rand =  Math.floor(Math.random() * (matrix.length - 1 + 1));\r\n            if (currentMatrix[rand] === null) {\r\n              if (count % 2 === 0) {\r\n                currentMatrix[rand] = secondSymb; // 'x'\r\n              } else {\r\n                currentMatrix[rand] = starterSymbLocalStorage;\r\n              }\r\n              setMatrix(currentMatrix);\r\n              setCount(count + 2);\r\n              localStorage.currentMatrix = JSON.stringify(currentMatrix);\r\n              localStorage.currentCount  = JSON.stringify(count + 1);\r\n  \r\n              isWin();\r\n              isDraw();\r\n  \r\n              break;\r\n            }\r\n          }\r\n        }\r\n  \r\n        setTimeout(computerTurn, 200);\r\n      }\r\n    } else {\r\n      const myAudio= document.getElementById('soundBad');\r\n      myAudio.play();\r\n    }\r\n\r\n    \r\n  }\r\n\r\n  const isWin = () => {\r\n    const arrSymbols = ['X', '0'];\r\n    // const symbol = (count % 2 === 0) ? 'X' : '0';\r\n    let sybmolVictory;\r\n\r\n    const alertWin = () => {\r\n      alert(`${sybmolVictory} win`);\r\n      clearField();\r\n    };\r\n\r\n    let victory = false;\r\n    arrSymbols.forEach((symbol, index) => {\r\n      for (let i = 0; i < combinationsWin.length; i++) {\r\n        let currentLine = combinationsWin[i];\r\n        if (matrix[currentLine[0]] === symbol \r\n        && matrix[currentLine[1]] === symbol\r\n        && matrix[currentLine[2]] === symbol) {\r\n          sybmolVictory = symbol;\r\n\r\n          if (index === 0) { // если X\r\n            let winsXcount = 0;\r\n            if (localStorage.winsXcount) {\r\n              winsXcount = +JSON.parse( localStorage.winsXcount );\r\n            } \r\n            localStorage.winsXcount  = JSON.stringify(winsXcount + 1);\r\n          }\r\n\r\n          if (index === 1) { // если 0\r\n            let wins0count = 0;\r\n            if (localStorage.wins0count) {\r\n              wins0count = +JSON.parse( localStorage.wins0count );\r\n            } \r\n            localStorage.wins0count  = JSON.stringify(wins0count + 1);\r\n          }\r\n\r\n\r\n          setTimeout(alertWin, 0);\r\n          // alert(`${symbol} win`);\r\n          // clearField();\r\n          victory = true;\r\n          return true;\r\n        } \r\n      }\r\n    });\r\n    \r\n    return victory;\r\n\r\n  }\r\n\r\n  const isDraw = () => {\r\n    if (count === matrix.length - 1) {\r\n      alert('friendship win');\r\n      clearField();\r\n      return true;\r\n    } \r\n    return false;\r\n  }\r\n\r\n  const clearField = () => {\r\n    setMatrix(Array(9).fill(null));\r\n    setCount(0);\r\n    localStorage.currentMatrix = JSON.stringify(Array(9).fill(null));\r\n    localStorage.currentCount = JSON.stringify(0);\r\n  }\r\n\r\n  const alertPrevResults = () => {\r\n    const winsXcount = +JSON.parse( localStorage.winsXcount );\r\n    const wins0count = +JSON.parse( localStorage.wins0count );\r\n    alert(`X - ${winsXcount} wins; 0 - ${wins0count} wins`);\r\n  }\r\n\r\n  const [count, setCount] = useState(countLocalStorage);\r\n\r\n  const [matrix, setMatrix] = useState(matrixLocalStorage);\r\n\r\n  const [typeGame, setTypeGame] = useState(false);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"mainContent\">\r\n        <div className=\"audioBlock\">\r\n          <audio src={city}  preload=\"auto\" controls autoplay=\"true\" loop=\"true\">\r\n            {/* <track kind=\"captions\" src=\"subtitles_en.vtt\" srcLang=\"en\" /> */}\r\n          </audio>\r\n        </div>\r\n        <audio id=\"soundGood\" src={soundGood}></audio>\r\n        <audio id=\"soundBad\" src={soundBad}></audio>\r\n\r\n        {/* <audio controls id=\"beep\" >\r\n                  \r\n                  <source src={city} type=\"audio/mp3\" autoPlay/>\r\n                  Your browser does not support the audio tag.\r\n        </audio> */}\r\n        {/* <img src={smile}></img> */}\r\n\r\n        <BootstrapSwitchButton\r\n            checked={typeGameLocalStorage} // false\r\n            onlabel='With Computer'\r\n            onstyle='danger'\r\n            offlabel='Two Players'\r\n            offstyle='success'\r\n            style='w-100 mx-3'\r\n            onChange={(checked) => {\r\n                // this.setState({ isUserAdmin: checked })\r\n                setTypeGame(checked);\r\n                localStorage.typeGame  = JSON.stringify(checked);\r\n                clearField();\r\n                console.log(typeGame);\r\n            }}\r\n        />\r\n        <p className=\"counter\"> {count} Count</p>\r\n\r\n        <div className=\"tic-tac\">\r\n          <div className=\"tt-grid\" onClick={clickHandler} data=\"0\">\r\n            {matrix[0]}\r\n          </div>\r\n          <div className=\"tt-grid\" onClick={clickHandler} data=\"1\">\r\n            {matrix[1]}\r\n          </div>\r\n          <div className=\"tt-grid\" onClick={clickHandler} data=\"2\">\r\n            {matrix[2]}\r\n          </div>\r\n          <div className=\"tt-grid\" onClick={clickHandler} data=\"3\">\r\n            {matrix[3]}\r\n          </div>\r\n          <div className=\"tt-grid\" onClick={clickHandler} data=\"4\">\r\n            {matrix[4]}\r\n          </div>\r\n          <div className=\"tt-grid\" onClick={clickHandler} data=\"5\">\r\n            {matrix[5]}\r\n          </div>\r\n          <div className=\"tt-grid\" onClick={clickHandler} data=\"6\">\r\n            {matrix[6]}\r\n          </div>\r\n          <div className=\"tt-grid\" onClick={clickHandler} data=\"7\">\r\n            {matrix[7]}\r\n          </div>\r\n          <div className=\"tt-grid\" onClick={clickHandler} data=\"8\">\r\n            {matrix[8]}\r\n          </div>\r\n        </div>\r\n        <div className=\"lineButtons\">\r\n          <button type=\"button\" class=\"btn btn-primary\" onClick={clearField}>New Game</button>\r\n          <button type=\"button\" class=\"btn btn-primary\" onClick={alertPrevResults}>Previous results</button>\r\n        </div>\r\n        \r\n      \r\n      </div>\r\n\r\n      \r\n      \r\n      <div className=\"footer\">\r\n        <a href=\"https://rs.school/react/\">\r\n          <img src={logoRs} className=\"logo\"></img>\r\n        </a>\r\n        <div>2021</div>\r\n        <a className=\"githubSrc\" href=\"https://github.com/nickaya112\">\r\n          <div className=\"github\">gitHub</div>\r\n        </a>\r\n      </div>\r\n  \r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport {render} from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nrender(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}